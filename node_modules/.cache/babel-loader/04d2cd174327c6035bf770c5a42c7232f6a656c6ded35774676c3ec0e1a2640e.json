{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nexport default {\n  props: {\n    filterStatus: {\n      type: String,\n      required: true\n    },\n    sortByRemainingDays: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    ...mapGetters(['todos']),\n    // Vuex에서 todos 가져오기\n\n    // 필터링된 할 일 목록\n    filteredTodos() {\n      let todos = this.todos;\n\n      // 필터링: 미완료, 완료, 전체\n      if (this.filterStatus === 'active') {\n        todos = todos.filter(todo => !todo.done);\n      } else if (this.filterStatus === 'completed') {\n        todos = todos.filter(todo => todo.done);\n      }\n\n      // 정렬: 남은 기간순 정렬 (endDate 기준)\n      if (this.sortByRemainingDays) {\n        todos = todos.slice().sort((a, b) => this.calculateRemainingDays(a.endDate) - this.calculateRemainingDays(b.endDate));\n      }\n      return todos;\n    }\n  },\n  methods: {\n    ...mapActions(['removeTodo', 'toggleTodoStatus']),\n    // Vuex 액션 바인딩\n\n    formatDate(date) {\n      if (!date) return ''; // 날짜가 없을 때 빈 값 처리\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return new Date(date).toLocaleDateString(undefined, options);\n    },\n    calculateRemainingDays(startDate, endDate) {\n      if (!endDate) return ''; // 종료 날짜가 없을 경우 빈 값 반환\n      const currentDate = new Date(startDate);\n      const targetDate = new Date(endDate);\n      const timeDiff = targetDate - currentDate; // 두 날짜 간의 차이 계산\n      const daysRemaining = Math.ceil(timeDiff / (1000 * 60 * 60 * 24)); // 남은 일 수 계산\n      return daysRemaining > 0 ? daysRemaining : 0; // 남은 일 수가 0 이하이면 0으로 반환\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","props","filterStatus","type","String","required","sortByRemainingDays","Boolean","default","computed","filteredTodos","todos","filter","todo","done","slice","sort","a","b","calculateRemainingDays","endDate","methods","formatDate","date","options","year","month","day","Date","toLocaleDateString","undefined","startDate","currentDate","targetDate","timeDiff","daysRemaining","Math","ceil"],"sources":["C:\\Users\\zmark\\OneDrive\\Desktop\\vue\\practice1\\project1\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n  <ul>\r\n    <li v-for=\"(todo, index) in filteredTodos\" :key=\"index\">\r\n      <input type=\"checkbox\" :checked=\"todo.done\" @change=\"toggleTodoStatus(index)\" />\r\n      <span :class=\"{ done: todo.done }\">{{ todo.text }}</span>\r\n      <span> - {{ formatDate(todo.date) }}</span> <!-- 추가된 기본 날짜 -->\r\n      <span> (기간: {{ formatDate(todo.startDate) }} ~ {{ formatDate(todo.endDate) }})</span> <!-- 시작 날짜와 종료 날짜 표시 -->\r\n      <span> (남은 기간: {{ calculateRemainingDays(todo.endDate) }}일)</span> <!-- 남은 기간 표시 -->\r\n      <button @click=\"removeTodo(index)\">삭제</button>\r\n    </li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\n\r\nexport default {\r\n  props: {\r\n    filterStatus: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    sortByRemainingDays: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['todos']),  // Vuex에서 todos 가져오기\r\n\r\n    // 필터링된 할 일 목록\r\n    filteredTodos() {\r\n      let todos = this.todos;\r\n      \r\n      // 필터링: 미완료, 완료, 전체\r\n      if (this.filterStatus === 'active') {\r\n        todos = todos.filter(todo => !todo.done);\r\n      } else if (this.filterStatus === 'completed') {\r\n        todos = todos.filter(todo => todo.done);\r\n      }\r\n\r\n      // 정렬: 남은 기간순 정렬 (endDate 기준)\r\n      if (this.sortByRemainingDays) {\r\n        todos = todos.slice().sort((a, b) => this.calculateRemainingDays(a.endDate) - this.calculateRemainingDays(b.endDate));\r\n      }\r\n\r\n      return todos;\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['removeTodo', 'toggleTodoStatus']),  // Vuex 액션 바인딩\r\n\r\n    formatDate(date) {\r\n      if (!date) return '';  // 날짜가 없을 때 빈 값 처리\r\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n      return new Date(date).toLocaleDateString(undefined, options);\r\n    },\r\n\r\n    calculateRemainingDays(startDate, endDate) {\r\n      if (!endDate) return '';  // 종료 날짜가 없을 경우 빈 값 반환\r\n      const currentDate = new Date(startDate);\r\n      const targetDate = new Date(endDate);\r\n      const timeDiff = targetDate - currentDate;  // 두 날짜 간의 차이 계산\r\n      const daysRemaining = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));  // 남은 일 수 계산\r\n      return daysRemaining > 0 ? daysRemaining : 0;  // 남은 일 수가 0 이하이면 0으로 반환\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.done {\r\n  text-decoration: line-through;\r\n}\r\n</style>\r\n"],"mappings":"AAcA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACbC,KAAK,EAAE;IACLC,YAAY,EAAE;MACZC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,mBAAmB,EAAE;MACnBH,IAAI,EAAEI,OAAO;MACbC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGV,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;IAAG;;IAE3B;IACAW,aAAaA,CAAA,EAAG;MACd,IAAIC,KAAI,GAAI,IAAI,CAACA,KAAK;;MAEtB;MACA,IAAI,IAAI,CAACT,YAAW,KAAM,QAAQ,EAAE;QAClCS,KAAI,GAAIA,KAAK,CAACC,MAAM,CAACC,IAAG,IAAK,CAACA,IAAI,CAACC,IAAI,CAAC;MAC1C,OAAO,IAAI,IAAI,CAACZ,YAAW,KAAM,WAAW,EAAE;QAC5CS,KAAI,GAAIA,KAAK,CAACC,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,IAAI,CAAC;MACzC;;MAEA;MACA,IAAI,IAAI,CAACR,mBAAmB,EAAE;QAC5BK,KAAI,GAAIA,KAAK,CAACI,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAI,CAACC,sBAAsB,CAACF,CAAC,CAACG,OAAO,IAAI,IAAI,CAACD,sBAAsB,CAACD,CAAC,CAACE,OAAO,CAAC,CAAC;MACvH;MAEA,OAAOT,KAAK;IACd;EACF,CAAC;EACDU,OAAO,EAAE;IACP,GAAGrB,UAAU,CAAC,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;IAAG;;IAEpDsB,UAAUA,CAACC,IAAI,EAAE;MACf,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE,EAAG;MACvB,MAAMC,OAAM,GAAI;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAU,CAAC;MAClE,OAAO,IAAIC,IAAI,CAACL,IAAI,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAEN,OAAO,CAAC;IAC9D,CAAC;IAEDL,sBAAsBA,CAACY,SAAS,EAAEX,OAAO,EAAE;MACzC,IAAI,CAACA,OAAO,EAAE,OAAO,EAAE,EAAG;MAC1B,MAAMY,WAAU,GAAI,IAAIJ,IAAI,CAACG,SAAS,CAAC;MACvC,MAAME,UAAS,GAAI,IAAIL,IAAI,CAACR,OAAO,CAAC;MACpC,MAAMc,QAAO,GAAID,UAAS,GAAID,WAAW,EAAG;MAC5C,MAAMG,aAAY,GAAIC,IAAI,CAACC,IAAI,CAACH,QAAO,IAAK,IAAG,GAAI,EAAC,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC,EAAG;MACpE,OAAOC,aAAY,GAAI,IAAIA,aAAY,GAAI,CAAC,EAAG;IACjD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}