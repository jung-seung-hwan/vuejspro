{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = [\"onUpdate:modelValue\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"To-do List\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTodo = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.addTodo && $options.addTodo(...args), [\"enter\"])),\n    placeholder: \"할 일을 입력하세요\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.newTodo]]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, (todo, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => todo.done = $event\n    }, null, 8 /* PROPS */, _hoisted_2), [[_vModelCheckbox, todo.done]]), _createElementVNode(\"span\", {\n      class: _normalizeClass({\n        done: todo.done\n      })\n    }, _toDisplayString(todo.text), 3 /* TEXT, CLASS */), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeTodo(index)\n    }, \"삭제\", 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","$data","newTodo","onKeyup","_withKeys","args","$options","addTodo","placeholder","_Fragment","_renderList","todos","todo","index","key","type","done","_hoisted_2","class","_normalizeClass","text","onClick","removeTodo","_hoisted_3"],"sources":["C:\\Users\\zmark\\OneDrive\\Desktop\\vue\\practice1\\project1\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>To-do List</h1>\n    <input v-model=\"newTodo\" @keyup.enter=\"addTodo\" placeholder=\"할 일을 입력하세요\">\n    <ul>\n      <li v-for=\"(todo, index) in todos\" :key=\"index\">\n        <input type=\"checkbox\" v-model=\"todo.done\">\n        <span :class=\"{ done: todo.done }\">{{ todo.text }}</span>\n        <button @click=\"removeTodo(index)\">삭제</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      newTodo: '',\n      todos: []\n    };\n  },\n  methods: {\n    addTodo() {\n      if (this.newTodo.trim()) {\n        this.todos.push({ text: this.newTodo, done: false });\n        this.newTodo = '';\n      }\n    },\n    removeTodo(index) {\n      this.todos.splice(index, 1);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.done {\n  text-decoration: line-through;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;mBADf;mBAAA;;uBACEC,mBAAA,CAUM,OAVNC,UAUM,G,0BATJC,mBAAA,CAAmB,YAAf,YAAU,sB,gBACdA,mBAAA,CAAyE;IAH7E,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGoBC,KAAA,CAAAC,OAAO,GAAAF,MAAA;IAAGG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAHnCK,SAAA,KAAAC,IAAA,KAG2CC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IAAEG,WAAW,EAAC;iEAA5CP,KAAA,CAAAC,OAAO,E,GACvBJ,mBAAA,CAMK,c,kBALHF,mBAAA,CAIKa,SAAA,QATXC,WAAA,CAKkCT,KAAA,CAAAU,KAAK,EALvC,CAKkBC,IAAI,EAAEC,KAAK;yBAAvBjB,mBAAA,CAIK;MAJ+BkB,GAAG,EAAED;IAAK,I,gBAC5Cf,mBAAA,CAA2C;MAApCiB,IAAI,EAAC,UAAU;MAN9B,uBAAAf,MAAA,IAMwCY,IAAI,CAACI,IAAI,GAAAhB;4BANjDiB,UAAA,I,kBAMwCL,IAAI,CAACI,IAAI,E,GACzClB,mBAAA,CAAyD;MAAlDoB,KAAK,EAPpBC,eAAA;QAAAH,IAAA,EAO8BJ,IAAI,CAACI;MAAI;wBAAOJ,IAAI,CAACQ,IAAI,yBAC/CtB,mBAAA,CAA8C;MAArCuB,OAAK,EAAArB,MAAA,IAAEM,QAAA,CAAAgB,UAAU,CAACT,KAAK;OAAG,IAAE,iBAR7CU,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}