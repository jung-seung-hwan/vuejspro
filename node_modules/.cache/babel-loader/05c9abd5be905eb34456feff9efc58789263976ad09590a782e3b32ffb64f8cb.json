{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = [\"checked\", \"onChange\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"To-do List\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTodo = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.submitTodo && $options.submitTodo(...args), [\"enter\"])),\n    placeholder: \"할 일을 입력하세요\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.newTodo]]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.todos, (todo, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createCommentVNode(\" 체크박스 상태를 v-model이 아니라 @change 이벤트로 처리 \"), _createElementVNode(\"input\", {\n      type: \"checkbox\",\n      checked: todo.done,\n      onChange: $event => _ctx.toggleTodoStatus(index)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2), _createElementVNode(\"span\", {\n      class: _normalizeClass({\n        done: todo.done\n      })\n    }, _toDisplayString(todo.text), 3 /* TEXT, CLASS */), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.removeTodo(index)\n    }, \"삭제\", 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","$data","newTodo","onKeyup","_withKeys","args","$options","submitTodo","placeholder","_Fragment","_renderList","_ctx","todos","todo","index","key","_createCommentVNode","type","checked","done","onChange","toggleTodoStatus","_hoisted_2","class","_normalizeClass","text","onClick","removeTodo","_hoisted_3"],"sources":["C:\\Users\\zmark\\OneDrive\\Desktop\\vue\\practice1\\project1\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>To-do List</h1>\n    <input v-model=\"newTodo\" @keyup.enter=\"submitTodo\" placeholder=\"할 일을 입력하세요\" />\n    <ul>\n      <li v-for=\"(todo, index) in todos\" :key=\"index\">\n        <!-- 체크박스 상태를 v-model이 아니라 @change 이벤트로 처리 -->\n        <input type=\"checkbox\" :checked=\"todo.done\" @change=\"toggleTodoStatus(index)\" />\n        <span :class=\"{ done: todo.done }\">{{ todo.text }}</span>\n        <button @click=\"removeTodo(index)\">삭제</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default {\n  data() {\n    return {\n      newTodo: ''  // 기본 값이 빈 문자열이어야 합니다.\n    };\n  },\n  computed: {\n    ...mapGetters(['todos'])  // Vuex에서 todos 가져오기\n  },\n  methods: {\n    ...mapActions(['addTodo', 'removeTodo', 'toggleTodoStatus']),  // Vuex 액션 바인딩\n    \n    submitTodo() {\n      if (this.newTodo) {\n        this.addTodo(this.newTodo);  // Vuex 액션을 사용하여 할 일 추가\n        this.newTodo = '';  // 추가 후 입력 필드 초기화\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.done {\n  text-decoration: line-through;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;mBADf;mBAAA;;uBACEC,mBAAA,CAWM,OAXNC,UAWM,G,0BAVJC,mBAAA,CAAmB,YAAf,YAAU,sB,gBACdA,mBAAA,CAA8E;IAHlF,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGoBC,KAAA,CAAAC,OAAO,GAAAF,MAAA;IAAGG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAHnCK,SAAA,KAAAC,IAAA,KAG2CC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEG,WAAW,EAAC;iEAA/CP,KAAA,CAAAC,OAAO,E,GACvBJ,mBAAA,CAOK,c,kBANHF,mBAAA,CAKKa,SAAA,QAVXC,WAAA,CAKkCC,IAAA,CAAAC,KAAK,EALvC,CAKkBC,IAAI,EAAEC,KAAK;yBAAvBlB,mBAAA,CAKK;MAL+BmB,GAAG,EAAED;IAAK,IAC5CE,mBAAA,2CAA8C,EAC9ClB,mBAAA,CAAgF;MAAzEmB,IAAI,EAAC,UAAU;MAAEC,OAAO,EAAEL,IAAI,CAACM,IAAI;MAAGC,QAAM,EAAApB,MAAA,IAAEW,IAAA,CAAAU,gBAAgB,CAACP,KAAK;6CAPnFQ,UAAA,GAQQxB,mBAAA,CAAyD;MAAlDyB,KAAK,EARpBC,eAAA;QAAAL,IAAA,EAQ8BN,IAAI,CAACM;MAAI;wBAAON,IAAI,CAACY,IAAI,yBAC/C3B,mBAAA,CAA8C;MAArC4B,OAAK,EAAA1B,MAAA,IAAEW,IAAA,CAAAgB,UAAU,CAACb,KAAK;OAAG,IAAE,iBAT7Cc,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}