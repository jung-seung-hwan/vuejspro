{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nexport default {\n  props: {\n    filterStatus: {\n      type: String,\n      required: true\n    },\n    sortByRemainingDays: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    ...mapGetters(['todos']),\n    filteredTodos() {\n      let todos = this.todos;\n      if (this.filterStatus === 'active') {\n        todos = todos.filter(todo => !todo.done);\n      } else if (this.filterStatus === 'completed') {\n        todos = todos.filter(todo => todo.done);\n      }\n      if (this.sortByRemainingDays) {\n        todos = todos.slice().sort((a, b) => this.calculateRemainingDays(a.startDate, a.endDate) - this.calculateRemainingDays(b.startDate, b.endDate));\n      }\n      return todos;\n    }\n  },\n  methods: {\n    ...mapActions(['removeTodo', 'toggleTodoStatus']),\n    formatDate(date) {\n      if (!date) return '';\n      return new Date(date).toLocaleDateString();\n    },\n    calculateRemainingDays(startDate, endDate) {\n      if (!endDate) return '';\n      const currentDate = new Date();\n      const targetDate = new Date(endDate);\n      const timeDiff = targetDate - currentDate;\n      return Math.ceil(timeDiff / (1000 * 60 * 60 * 24)) || 0;\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","props","filterStatus","type","String","required","sortByRemainingDays","Boolean","default","computed","filteredTodos","todos","filter","todo","done","slice","sort","a","b","calculateRemainingDays","startDate","endDate","methods","formatDate","date","Date","toLocaleDateString","currentDate","targetDate","timeDiff","Math","ceil"],"sources":["C:\\Users\\USER\\Documents\\GitHub\\vuejspro\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>수행 여부</th>\r\n        <th>할일</th>\r\n        <th>추가한 날짜</th>\r\n        <th>기간</th>\r\n        <th>남은 기간</th>\r\n        <th>삭제</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(todo, index) in filteredTodos\" :key=\"index\">\r\n        <td><input type=\"checkbox\" :checked=\"todo.done\" @change=\"toggleTodoStatus(index)\" /></td>\r\n        <td :class=\"{ done: todo.done }\">{{ todo.text }}</td>\r\n        <td>{{ formatDate(todo.date) }}</td>\r\n        <td>{{ formatDate(todo.startDate) }} ~ {{ formatDate(todo.endDate) }}</td>\r\n        <td>{{ calculateRemainingDays(todo.startDate, todo.endDate) }}일</td>\r\n        <td><button @click=\"removeTodo(index)\">삭제</button></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\n\r\nexport default {\r\n  props: {\r\n    filterStatus: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    sortByRemainingDays: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['todos']),\r\n    filteredTodos() {\r\n      let todos = this.todos;\r\n      if (this.filterStatus === 'active') {\r\n        todos = todos.filter(todo => !todo.done);\r\n      } else if (this.filterStatus === 'completed') {\r\n        todos = todos.filter(todo => todo.done);\r\n      }\r\n      if (this.sortByRemainingDays) {\r\n        todos = todos.slice().sort((a, b) => this.calculateRemainingDays(a.startDate, a.endDate) - this.calculateRemainingDays(b.startDate, b.endDate));\r\n      }\r\n      return todos;\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['removeTodo', 'toggleTodoStatus']),\r\n    formatDate(date) {\r\n      if (!date) return '';\r\n      return new Date(date).toLocaleDateString();\r\n    },\r\n    calculateRemainingDays(startDate, endDate) {\r\n      if (!endDate) return '';\r\n      const currentDate = new Date();\r\n      const targetDate = new Date(endDate);\r\n      const timeDiff = targetDate - currentDate;\r\n      return Math.ceil(timeDiff / (1000 * 60 * 60 * 24)) || 0;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.done {\r\n  text-decoration: line-through;\r\n}\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n}\r\nth {\r\n  background-color: #f4f4f4;\r\n}\r\n</style>\r\n"],"mappings":"AA0BA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACbC,KAAK,EAAE;IACLC,YAAY,EAAE;MACZC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,mBAAmB,EAAE;MACnBH,IAAI,EAAEI,OAAO;MACbC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGV,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;IACxBW,aAAaA,CAAA,EAAG;MACd,IAAIC,KAAI,GAAI,IAAI,CAACA,KAAK;MACtB,IAAI,IAAI,CAACT,YAAW,KAAM,QAAQ,EAAE;QAClCS,KAAI,GAAIA,KAAK,CAACC,MAAM,CAACC,IAAG,IAAK,CAACA,IAAI,CAACC,IAAI,CAAC;MAC1C,OAAO,IAAI,IAAI,CAACZ,YAAW,KAAM,WAAW,EAAE;QAC5CS,KAAI,GAAIA,KAAK,CAACC,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,IAAI,CAAC;MACzC;MACA,IAAI,IAAI,CAACR,mBAAmB,EAAE;QAC5BK,KAAI,GAAIA,KAAK,CAACI,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAI,CAACC,sBAAsB,CAACF,CAAC,CAACG,SAAS,EAAEH,CAAC,CAACI,OAAO,IAAI,IAAI,CAACF,sBAAsB,CAACD,CAAC,CAACE,SAAS,EAAEF,CAAC,CAACG,OAAO,CAAC,CAAC;MACjJ;MACA,OAAOV,KAAK;IACd;EACF,CAAC;EACDW,OAAO,EAAE;IACP,GAAGtB,UAAU,CAAC,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;IACjDuB,UAAUA,CAACC,IAAI,EAAE;MACf,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;MACpB,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,kBAAkB,CAAC,CAAC;IAC5C,CAAC;IACDP,sBAAsBA,CAACC,SAAS,EAAEC,OAAO,EAAE;MACzC,IAAI,CAACA,OAAO,EAAE,OAAO,EAAE;MACvB,MAAMM,WAAU,GAAI,IAAIF,IAAI,CAAC,CAAC;MAC9B,MAAMG,UAAS,GAAI,IAAIH,IAAI,CAACJ,OAAO,CAAC;MACpC,MAAMQ,QAAO,GAAID,UAAS,GAAID,WAAW;MACzC,OAAOG,IAAI,CAACC,IAAI,CAACF,QAAO,IAAK,IAAG,GAAI,EAAC,GAAI,EAAC,GAAI,EAAE,CAAC,KAAK,CAAC;IACzD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}